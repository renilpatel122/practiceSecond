#version: '3.8'
#
#services:
#
#  # ====================
#  # Databases & Caches
#  # ====================
#
#  postgres-db:
#    image: postgres:15
#    container_name: postgres
#    restart: always
#    environment:
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: root
#      POSTGRES_DB: food_delivery
#    ports:
#      - "5433:5432"
#    networks:
#      - foodnet
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#
#  redis:
#    image: redis:7.2
#    container_name: redis
#    restart: always
#    ports:
#      - "6379:6379"
#    networks:
#      - foodnet
#
#  zookeeper:
#    image: confluentinc/cp-zookeeper:7.5.1
#    container_name: zookeeper
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#      ZOOKEEPER_TICK_TIME: 2000
#    ports:
#      - "2181:2181"
#    networks:
#      - foodnet
#
#  kafka:
#    image: confluentinc/cp-kafka:7.5.1
#    container_name: kafka
#    depends_on:
#      - zookeeper
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_BROKER_ID: 1
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#    networks:
#      - foodnet
#
#  # ====================
#  # Microservices
#  # ====================
#
#  api-gateway:
#    build:
#      context: ./api-gateway
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    depends_on:
#      - auth-service
#      - user-service
#      - restaurant-service
#      - order-service
#      - delivery-service
#      - notification-service
#    networks:
#      - foodnet
#
#  auth-service:
#    build:
#      context: ./auth-service
#    container_name: auth-service
#    ports:
#      - "8081:8081"
#    networks:
#      - foodnet
#
#  user-service:
#    build:
#      context: ./user-service
#    container_name: user-service
#    ports:
#      - "8082:8082"
#    networks:
#      - foodnet
#
#  restaurant-service:
#    build:
#      context: ./restaurant-service
#    container_name: restaurant-service
#    ports:
#      - "8083:8083"
#    networks:
#      - foodnet
#
#  order-service:
#    build:
#      context: ./order-service
#    container_name: order-service
#    ports:
#      - "8084:8084"
#    networks:
#      - foodnet
#
#  delivery-service:
#    build:
#      context: ./delivery-service
#    container_name: delivery-service
#    ports:
#      - "8086:8086"
#    networks:
#      - foodnet
#
#  notification-service:
#    build:
#      context: ./notification-service
#    container_name: notification-service
#    ports:
#      - "8085:8085"
#    networks:
#      - foodnet
#
#networks:
#  foodnet:
#    driver: bridge
#
#volumes:
#  postgres_data:

version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"
      - "8001:8001"
